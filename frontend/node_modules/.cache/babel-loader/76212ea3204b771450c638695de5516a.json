{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // Adjust the URL as needed\n\n// Auth API calls\nexport const registerUser = async userData => {\n  const response = await axios.post(`${API_URL}/auth/register`, userData);\n  return response.data;\n};\nexport const loginUser = async credentials => {\n  const response = await axios.post(`${API_URL}/auth/login`, credentials);\n  return response.data;\n};\n\n// Blog Post API calls\nexport const fetchPosts = async () => {\n  const response = await axios.get(`${API_URL}/posts`);\n  return response.data;\n};\nexport const fetchPostById = async postId => {\n  const response = await axios.get(`${API_URL}/posts/${postId}`);\n  return response.data;\n};\nexport const createPost = async (postData, token) => {\n  const formData = new FormData();\n  formData.append('title', postData.title);\n  formData.append('content', postData.content);\n  formData.append('tags', JSON.stringify(postData.tags));\n  if (postData.image) {\n    formData.append('image', postData.image);\n  }\n  const response = await axios.post(`${API_URL}/posts`, formData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\nexport const updatePost = async (postId, postData, token) => {\n  const response = await axios.put(`${API_URL}/posts/${postId}`, postData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport const deletePost = async (postId, token) => {\n  const response = await axios.delete(`${API_URL}/posts/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport async function getPost(id) {\n  const response = await axios.get(`http://localhost:5000/api/posts/${id}`);\n  return response.data;\n}\n// ...existing code...\n\n// Profile API calls\nexport const fetchUserProfile = async () => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get(`${API_URL}/profiles/me`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","registerUser","userData","response","post","data","loginUser","credentials","fetchPosts","get","fetchPostById","postId","createPost","postData","token","formData","FormData","append","title","content","JSON","stringify","tags","image","headers","Authorization","updatePost","put","deletePost","delete","getPost","id","fetchUserProfile","localStorage","getItem"],"sources":["C:/Users/shiva/Desktop/blog-platform/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api'; // Adjust the URL as needed\n\n// Auth API calls\nexport const registerUser = async (userData) => {\n    const response = await axios.post(`${API_URL}/auth/register`, userData);\n    return response.data;\n};\n\nexport const loginUser = async (credentials) => {\n    const response = await axios.post(`${API_URL}/auth/login`, credentials);\n    return response.data;\n};\n\n// Blog Post API calls\nexport const fetchPosts = async () => {\n    const response = await axios.get(`${API_URL}/posts`);\n    return response.data;\n};\n\nexport const fetchPostById = async (postId) => {\n    const response = await axios.get(`${API_URL}/posts/${postId}`);\n    return response.data;\n};\n\nexport const createPost = async (postData, token) => {\n    const formData = new FormData();\n    formData.append('title', postData.title);\n    formData.append('content', postData.content);\n    formData.append('tags', JSON.stringify(postData.tags));\n    if (postData.image) {\n        formData.append('image', postData.image);\n    }\n    const response = await axios.post(`${API_URL}/posts`, formData, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n        },\n    });\n    return response.data;\n};\n\nexport const updatePost = async (postId, postData, token) => {\n    const response = await axios.put(`${API_URL}/posts/${postId}`, postData, {\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n};\n\nexport const deletePost = async (postId, token) => {\n    const response = await axios.delete(`${API_URL}/posts/${postId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n};\n\n\nexport async function getPost(id) {\n  const response = await axios.get(`http://localhost:5000/api/posts/${id}`);\n  return response.data;\n}\n// ...existing code...\n\n// Profile API calls\nexport const fetchUserProfile = async () => {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/profiles/me`, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n    return response.data;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}