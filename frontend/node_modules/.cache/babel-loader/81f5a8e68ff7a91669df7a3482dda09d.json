{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\blog-platform\\\\frontend\\\\src\\\\components\\\\Profile\\\\ProfileView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchUserProfile } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileView({\n  userId\n}) {\n  _s();\n  const [profile, setProfile] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    async function getProfile() {\n      try {\n        const response = await fetchUserProfile(userId);\n        setProfile(response.profile);\n        setPosts(response.posts);\n      } catch (err) {\n        setError(err.message || 'Failed to load profile');\n      }\n    }\n    getProfile();\n  }, [userId]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n  if (!profile) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: profile.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: profile.profilePicture,\n      alt: \"Profile\",\n      width: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: profile.bio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileView, \"On/PFCXy+gANt7DdmOacP+Vlm3s=\");\n_c = ProfileView;\nexport default ProfileView;\nvar _c;\n$RefreshReg$(_c, \"ProfileView\");","map":{"version":3,"names":["React","useEffect","useState","fetchUserProfile","jsxDEV","_jsxDEV","ProfileView","userId","_s","profile","setProfile","posts","setPosts","error","setError","getProfile","response","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","profilePicture","alt","width","bio","map","post","title","_id","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/blog-platform/frontend/src/components/Profile/ProfileView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchUserProfile } from '../../utils/api';\n\nfunction ProfileView({ userId }) {\n  const [profile, setProfile] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function getProfile() {\n      try {\n        const response = await fetchUserProfile(userId);\n        setProfile(response.profile);\n        setPosts(response.posts);\n      } catch (err) {\n        setError(err.message || 'Failed to load profile');\n      }\n    }\n    getProfile();\n  }, [userId]);\n\n  if (error) return <div>Error: {error}</div>;\n  if (!profile) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h2>{profile.name}</h2>\n      <img src={profile.profilePicture} alt=\"Profile\" width={100} />\n      <p>{profile.bio}</p>\n      <h3>Posts</h3>\n      <ul>\n        {posts.map(post => (\n          <li key={post._id}>{post.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ProfileView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,eAAec,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,gBAAgB,CAACI,MAAM,CAAC;QAC/CG,UAAU,CAACM,QAAQ,CAACP,OAAO,CAAC;QAC5BG,QAAQ,CAACI,QAAQ,CAACL,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZH,QAAQ,CAACG,GAAG,CAACC,OAAO,IAAI,wBAAwB,CAAC;MACnD;IACF;IACAH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,IAAIM,KAAK,EAAE,oBAAOR,OAAA;IAAAc,QAAA,GAAK,SAAO,EAACN,KAAK;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC3C,IAAI,CAACd,OAAO,EAAE,oBAAOJ,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1C,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAKV,OAAO,CAACe;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBlB,OAAA;MAAKoB,GAAG,EAAEhB,OAAO,CAACiB,cAAe;MAACC,GAAG,EAAC,SAAS;MAACC,KAAK,EAAE;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DlB,OAAA;MAAAc,QAAA,EAAIV,OAAO,CAACoB;IAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAAc,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdlB,OAAA;MAAAc,QAAA,EACGR,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACb1B,OAAA;QAAAc,QAAA,EAAoBY,IAAI,CAACC;MAAK,GAArBD,IAAI,CAACE,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CAlCQF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}